services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rag-chat-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db-schema.sql:/docker-entrypoint-initdb.d/init-db-schema.sql:ro
    networks:
      - rag-chat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chat_user -d chatdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RAG Chat Service Application
  rag-chat-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-chat-service-app
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rag-chat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: rag-chat-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ragchat.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - rag-chat-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  rag-chat-network:
    driver: bridge