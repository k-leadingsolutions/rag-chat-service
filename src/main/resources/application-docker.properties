# Docker Profile Configuration
server.port=8080

# Database Configuration for Docker
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/chatdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:chat_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:chat_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool Configuration for Docker
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=20000

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.url=${SPRING_DATASOURCE_URL}
spring.flyway.user=${SPRING_DATASOURCE_USERNAME}
spring.flyway.password=${SPRING_DATASOURCE_PASSWORD}
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=false

# Security Configuration
app.jwt.secret=${JWT_SECRET:mySecretKeyForDockerEnvironment123!@#SecureKey}
app.jwt.expiration=${JWT_EXPIRATION:86400000}
app.security.api-keys=${API_KEY:docker-api-key-change-in-prod}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.defaults.enabled=true

# Logging Configuration
logging.level.com.klead.ragchat=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# CORS Configuration for Docker
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Request-Id
spring.web.cors.exposed-headers=X-RateLimit-Limit,X-RateLimit-Remaining,Retry-After
spring.web.cors.allow-credentials=true

# Rate Limiting Configuration
app.ratelimit.capacity=${RATE_LIMIT_CAPACITY:200}
app.ratelimit.refillTokens=${RATE_LIMIT_REFILL_TOKENS:200}
app.ratelimit.refillPeriod=${RATE_LIMIT_REFILL_PERIOD:15m}

# Jackson Configuration
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false